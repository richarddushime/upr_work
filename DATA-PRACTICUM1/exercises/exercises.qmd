---
title: "exercises"
---

## intro to R

```{r}
#| label: setup
#| echo: true
##| echo: false #this flag, if left uncommented would hide this code chunk
library(tidyverse)
library(gt)
```

built in data sets

```{r}
#data() #show datasets available in base R and attached packages.
#two ways to get a quick overview of a dataset
str(Loblolly)
```

```{r}
glimpse(Loblolly)
```

Exploring data

```{r}
summary(Loblolly)
```

```{r}
summary(construction) # another way to get a summary of a dataset
```

```{r}
View(construction) #open in a spreadsheet-like view
#make our own summary
summary.d <- construction |>
#pivoting converts to a "long" format, which helps with many functions
#in R. here we use it to collapse each of the 4 Region columns into two:
#The first contains the names of each of the 4 regions, the second
#contains the values (or observations).
  
#Generally speaking, the long format describes one observation per row
pivot_longer(cols = 6:9, names_to = "Region", values_to = "HomesBuilt") |>
#since we are interested in month-by-month statistics, we group by month
group_by(Month) |>
#then we summarise with our own desired summary information
summarise(
  mu = mean(HomesBuilt),
  sd = sd(HomesBuilt),
  median = median(HomesBuilt)
)
summary.d |> gt::gt()
```

```{r}
??gt

```

```{r}
#similar to above, but this time we want summaries by region
construction |>
pivot_longer(cols = 6:9, names_to = "Region", values_to = "HomesBuilt") |>
group_by(Region) |>
summarise(
  mu = mean(HomesBuilt), # mean and sd produce quite a few decimals
  sd = sd(HomesBuilt), # we can simplify with a function like round()
  median = median(HomesBuilt),
  IQR = IQR(HomesBuilt)
)
```

## Visualizing Data

Histogram of tree data

```{r}
View(trees)

#here we start with data from a built in dataset, pivot it then send it to
#ggplot, the plotting tool we will use the most in this class
trees |>
pivot_longer(1:3, names_to = "Measurement", values_to = "Values") |>
#we will work with ggplot for now
#its based on the grammar of graphics and uses a layered based
#approach to building plots
#note that there was a big version change recently
#and some online guides will be out of date
ggplot(aes(Values, fill = Measurement)) +
geom_histogram() +
facet_wrap(.~Measurement, nrow = 3) +
theme_classic()

```

Scatterplot with a trend line
```{r}
ggplot(data = trees, aes(x=Girth, y=Height)) +
geom_smooth(method = "lm") +
geom_point(shape=3)
```

## Visualise tree data as trees 
```{r}
trees |> arrange(Height) |>
  mutate(order = seq(1:n())) |>
  ggplot(aes(x = order, y = Height)) +
  geom_col(width = trees$Girth/30) +
  geom_point(size = trees$Girth, shape = 17, colour = "#66cc66") +
  scale_y_continuous(limits = c(0,100)) +
  scale_x_continuous(limits = c(0,35)) +
  labs(y = "Tree Height (ft)", x = ""
  ,
    caption = "Line width is representative of stem girth.") +
  theme_minimal() +
  theme(axis.text.x = element_blank(),
    axis.ticks.x = element_blank())
```

